[{"id":"8500a1d7.c7f098","type":"tab","label":"BattleSnake Advanced","disabled":false,"info":""},{"id":"98455c9c.d05818","type":"http in","z":"8500a1d7.c7f098","name":"start","url":"/v1/start","method":"post","upload":false,"swaggerDoc":"","x":110,"y":60,"wires":[["ee339d7a.0807b"]]},{"id":"3764bff3.0893f","type":"debug","z":"8500a1d7.c7f098","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":450,"y":100,"wires":[]},{"id":"ee339d7a.0807b","type":"function","z":"8500a1d7.c7f098","name":"Game Start","func":"// This function is called when a game your snake is in starts.\n// It's purely for informational purposes, you don't have to make any decisions here.\n// msg.data contains information about the game that's about to be played.\nmsg.data = msg.payload;\n\nmsg.payload = { \"message\": \"ok\" }\nreturn msg;","outputs":1,"noerr":0,"x":270,"y":60,"wires":[["bd0c2dc1.e184a","3764bff3.0893f"]]},{"id":"bd0c2dc1.e184a","type":"http response","z":"8500a1d7.c7f098","name":"","statusCode":"","headers":{},"x":430,"y":60,"wires":[]},{"id":"94983db5.982858","type":"http in","z":"8500a1d7.c7f098","name":"move","url":"/v1/move","method":"post","upload":false,"swaggerDoc":"","x":110,"y":420,"wires":[["27e12870.785fc","5fcc66f1.95d8b8"]]},{"id":"3b1cb528.37087a","type":"http response","z":"8500a1d7.c7f098","name":"","statusCode":"","headers":{},"x":1650,"y":420,"wires":[]},{"id":"f08cea1a.65a69","type":"http in","z":"8500a1d7.c7f098","name":"end","url":"/v1/end","method":"post","upload":false,"swaggerDoc":"","x":110,"y":180,"wires":[["24078d37.460922"]]},{"id":"1fba5fed.37b528","type":"debug","z":"8500a1d7.c7f098","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":450,"y":220,"wires":[]},{"id":"24078d37.460922","type":"function","z":"8500a1d7.c7f098","name":"Game End","func":"// This function is called when a game your snake was in ends.\n// It's purely for informational purposes, you don't have to make any decisions here.\nmsg.payload = { \"message\": \"ok\" }\n  \nreturn msg;","outputs":1,"noerr":0,"x":270,"y":180,"wires":[["4f1a4dc8.6d01dc","1fba5fed.37b528"]]},{"id":"4f1a4dc8.6d01dc","type":"http response","z":"8500a1d7.c7f098","name":"","statusCode":"","headers":{},"x":430,"y":180,"wires":[]},{"id":"c5cb3b12.0a461","type":"http in","z":"8500a1d7.c7f098","name":"metadata","url":"/v1/","method":"get","upload":false,"swaggerDoc":"","x":120,"y":300,"wires":[["1dbff4bd.6eb533"]]},{"id":"9b606b57.45bb18","type":"debug","z":"8500a1d7.c7f098","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":490,"y":340,"wires":[]},{"id":"1dbff4bd.6eb533","type":"function","z":"8500a1d7.c7f098","name":"Snake Config","func":"//  This function is called by Battlesnake to get information about your snake, or to keep it awake.\n// TODO: Use this function to decide how your snake is going to look on the board.\n\n/*\napiversion:string - Battlesnake API Version implemented by this Battlesnake\nauthor:string - Optional username of the Battlesnakeâ€™s author\nhead:string - Optional custom head for this Battlesnake\ntail:string - Optional custom tail for this Battlesnake\ncolor:string - Optional custom color for this Battlesnake\n*/\n\nmsg.payload = {\n    'apiversion': '1',\n    'color': '#'+Math.floor(Math.random()*16777215).toString(16), //random colour\n    'head': \"evil\",\n    'tail': \"hook\"\n  }\n\nreturn msg;","outputs":1,"noerr":0,"x":300,"y":300,"wires":[["da2e55ec.ad5608","9b606b57.45bb18"]]},{"id":"da2e55ec.ad5608","type":"http response","z":"8500a1d7.c7f098","name":"","statusCode":"","headers":{},"x":470,"y":300,"wires":[]},{"id":"27e12870.785fc","type":"change","z":"8500a1d7.c7f098","name":"Game Information","rules":[{"t":"set","p":"data","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":290,"y":520,"wires":[["a6db2c3c.0df4e"]]},{"id":"754144a.3c07c3c","type":"wait-paths","z":"8500a1d7.c7f098","name":"","paths":"[\"timeout\",\"possibleMoves\",\"threats\"]","timeout":"480","finalTimeout":"480","x":1250,"y":420,"wires":[["4d7c13f9.4e465c"]]},{"id":"75da136e.6d499c","type":"function","z":"8500a1d7.c7f098","name":"Avoid Necks","func":"for (let boi in msg.data.board.snakes) {\n    let snakeName = msg.data.board.snakes[boi]['name'];\n    if (snakeName == msg.mySnakeName) {\n        for (let direction in msg.possibleMoves) {\n            //if ((msg.possibleMoves[direction]['x'] == msg.neck['x']) && (msg.possibleMoves[direction]['y'] == msg.neck['y'])) {\n            if (msg.sameCoord(msg.possibleMoves[direction],msg.neck)) {\n                delete msg.possibleMoves[direction];\n                break;\n            }\n        }\n    } else {\n        let snakeNeck = msg.data.board.snakes[boi]['body'][1];\n        for (let direction in msg.enemyLookAhead[snakeName]) {\n            //if ((msg.enemyLookAhead[snakeName][direction]['x'] == snakeNeck['x']) && (msg.enemyLookAhead[snakeName]['y'] == snakeNeck['y'])) {\n            if (msg.sameCoord(msg.enemyLookAhead[snakeName][direction],snakeNeck)) {\n                delete msg.enemyLookAhead[snakeName][direction];\n                break;\n            }\n        }\n    }\n}\nreturn msg;","outputs":1,"noerr":0,"x":790,"y":520,"wires":[["115f5bb7.999bfc"]]},{"id":"5fcc66f1.95d8b8","type":"change","z":"8500a1d7.c7f098","name":"Start Timeout","rules":[{"t":"set","p":"paths","pt":"msg","to":"{\"timeout\": true}","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":270,"y":420,"wires":[["754144a.3c07c3c"]]},{"id":"4d7c13f9.4e465c","type":"function","z":"8500a1d7.c7f098","name":"Move Decision","func":"\n//avoid threatenedSquares\nif (msg.paths.threats) {\n    for (let direction in msg.paths.threats) {\n        delete msg.possibleMoves[msg.paths.threats[direction]];\n    }\n}\n\n// Choose a random direction to move in\nlet choice = Math.floor(Math.random() * Object.keys(msg.paths.possibleMoves).length);\nlet snakeMove = Object.keys(msg.paths.possibleMoves)[choice];\n\nmsg.payload = { \"move\": snakeMove }\nreturn msg;","outputs":1,"noerr":0,"x":1460,"y":420,"wires":[["de9dc649.b44d7","3b1cb528.37087a","5620f2ce.d73ef4"]]},{"id":"bc65d059.53bee8","type":"catch","z":"8500a1d7.c7f098","name":"Catch Timeout","scope":["754144a.3c07c3c"],"uncaught":false,"x":1260,"y":460,"wires":[["4d7c13f9.4e465c","ece5b36d.afb59"]]},{"id":"1ff2ddc7.df48c2","type":"function","z":"8500a1d7.c7f098","name":"Snake Attributes","func":"msg.head = msg.data.you.head;\nmsg.neck = msg.data.you.body[1];\n\nmsg.possibleMoves = msg.createMoveCoords(msg.head);\n\nmsg.mySnakeLength = msg.data.you.body.length;\nmsg.mySnakeName = msg.data.you.name;\n\nreturn msg;","outputs":1,"noerr":0,"x":540,"y":520,"wires":[["21103100.8fc9a"]]},{"id":"de9dc649.b44d7","type":"debug","z":"8500a1d7.c7f098","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":1670,"y":460,"wires":[]},{"id":"115f5bb7.999bfc","type":"function","z":"8500a1d7.c7f098","name":"Avoid Walls","func":"\nfor (let boi in msg.data.board.snakes) {\n    let snakeName = msg.data.board.snakes[boi]['name'];\n    if (snakeName == msg.mySnakeName) {\n        for (let direction in msg.possibleMoves) {\n            if ((msg.possibleMoves[direction]['x'] < 0)\n            || (msg.possibleMoves[direction]['y'] < 0)\n            || (msg.possibleMoves[direction]['x'] > (msg.data.board.width-1))\n            || (msg.possibleMoves[direction]['y'] > (msg.data.board.height-1))) {\n                delete msg.possibleMoves[direction];\n                break;\n            }\n        }\n    } else {\n        for (let direction in msg.enemyLookAhead[snakeName]) {\n            if ((msg.enemyLookAhead[snakeName][direction]['x'] < 0)\n            || (msg.enemyLookAhead[snakeName][direction]['y'] < 0)\n            || (msg.enemyLookAhead[snakeName][direction]['x'] > (msg.data.board.width-1))\n            || (msg.enemyLookAhead[snakeName][direction]['y'] > (msg.data.board.height-1))) {\n                delete msg.enemyLookAhead[snakeName][direction];\n                break;\n            }\n        }\n    }\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":790,"y":580,"wires":[["79ae85c2.0327c4"]]},{"id":"79ae85c2.0327c4","type":"function","z":"8500a1d7.c7f098","name":"Avoid Bodies","func":"\nfor (let boi in msg.data.board.snakes) {\n    let snakeName = msg.data.board.snakes[boi]['name'];\n    if (snakeName == msg.mySnakeName) {\n        for (let boi2 in msg.data.board.snakes) {\n            for (let direction in msg.possibleMoves) {  //direction is 'left' or 'right' or 'down' or 'up'\n                for (let i in msg.data.board.snakes[boi2]['body']) {\n                    //if ((msg.possibleMoves[direction]['x'] == msg.data.board.snakes[boi2]['body'][i]['x'])\n                    //&& (msg.possibleMoves[direction]['y'] == msg.data.board.snakes[boi2]['body'][i]['y'])) {\n                    if (msg.sameCoord(msg.possibleMoves[direction],msg.data.board.snakes[boi2]['body'][i])) {\n                        delete msg.possibleMoves[direction];\n                        break;\n                    }\n                }\n            }\n        }\n    } else {\n        for (let boi2 in msg.data.board.snakes) {\n            for (let direction in msg.enemyLookAhead[snakeName]) {  //direction is 'left' or 'right' or 'down' or 'up'\n                for (let i in msg.data.board.snakes[boi2]['body']) {\n                    //if ((msg.enemyLookAhead[snakeName][direction]['x'] == msg.data.board.snakes[boi2]['body'][i]['x'])\n                    //&& (msg.enemyLookAhead[snakeName][direction]['y'] == msg.data.board.snakes[boi2]['body'][i]['y'])) {\n                    if (msg.sameCoord(msg.enemyLookAhead[snakeName][direction],msg.data.board.snakes[boi2]['body'][i])) {\n                        delete msg.enemyLookAhead[snakeName][direction];\n                        break;\n                    }\n                }\n            }\n        }\n    }\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":790,"y":640,"wires":[["ef83db3b.715e4","5375bc9a.1ebe6c"]]},{"id":"5620f2ce.d73ef4","type":"debug","z":"8500a1d7.c7f098","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1650,"y":500,"wires":[]},{"id":"ece5b36d.afb59","type":"debug","z":"8500a1d7.c7f098","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"error","targetType":"msg","x":1440,"y":500,"wires":[]},{"id":"ef83db3b.715e4","type":"function","z":"8500a1d7.c7f098","name":"Avoid Threats","func":"\n//msg.paths[\"threats\"] = []\nmsg.paths = {\"threats\": []};\nfor (let direction in msg.possibleMoves) {  //direction is 'left' or 'right' or 'down' or 'up'\n    for (let boi in msg.data.board.snakes) {\n        let snakeName = msg.data.board.snakes[boi]['name'];\n        if ((msg.mySnakeName != snakeName) && (msg.enemySnakeLengths[snakeName] >= msg.mySnakeLength)) {\n            for (let enemyDirection in msg.enemyLookAhead[snakeName]) {\n                if (msg.sameCoord(msg.possibleMoves[direction],msg.enemyLookAhead[snakeName][enemyDirection])) {\n                    msg.paths[\"threats\"].push(direction);\n                }\n            }\n        }\n    }\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":1020,"y":580,"wires":[["754144a.3c07c3c"]]},{"id":"75c2b5ce.dc3364","type":"function","z":"8500a1d7.c7f098","name":"Avoid Neck","func":"//msg.paths[\"variable_name\"] = value\nmsg.paths = {\"neck\": false};\nfor (let direction in msg.possibleMoves) {  //direction is 'left' or 'right' or 'down' or 'up'\n    if ((msg.possibleMoves[direction]['x'] == msg.neck['x']) && (msg.possibleMoves[direction]['y'] == msg.neck['y'])) {\n        msg.paths['neck'] = direction;\n        break;\n    }\n}\nreturn msg;","outputs":1,"noerr":0,"x":970,"y":340,"wires":[[]]},{"id":"21103100.8fc9a","type":"function","z":"8500a1d7.c7f098","name":"Enemy Attributes","func":"msg.enemyLengths = {};\nmsg.enemyLookAhead = {};\n\nfor (let boi in msg.data.board.snakes) {\n    let snakeName = msg.data.board.snakes[boi]['name'];\n    let snakeHead = msg.data.board.snakes[boi]['body'][0];\n    if (snakeName != msg.mySnakeName) {\n        msg.enemyLengths[snakeName] = msg.data.board.snakes[boi]['body'].length;\n        \n        msg.enemyLookAhead[snakeName] = msg.createMoveCoords(snakeHead);\n    }\n}\nreturn msg;","outputs":1,"noerr":0,"x":550,"y":580,"wires":[["75da136e.6d499c"]]},{"id":"70e872d8.188f64","type":"comment","z":"8500a1d7.c7f098","name":"Game States","info":"","x":530,"y":480,"wires":[]},{"id":"64131f69.c169a","type":"comment","z":"8500a1d7.c7f098","name":"Instant Deaths","info":"","x":790,"y":480,"wires":[]},{"id":"a6db2c3c.0df4e","type":"function","z":"8500a1d7.c7f098","name":"Helper Functions","func":"msg.sameCoord = function(coord1,coord2) {\n    return ((coord1['x'] == coord2['x']) && (coord1['y'] == coord2['y']))\n}\nmsg.createMoveCoords = function(position) {\n    let possibleMoveCoords = {};\n    possibleMoveCoords['left']={'x':(position['x']-1),'y':position['y']};\n    possibleMoveCoords['right']={'x':(position['x']+1),'y':position['y']};\n    possibleMoveCoords['up']={'x':(position['x']),'y':(position['y']+1)};\n    possibleMoveCoords['down']={'x':(position['x']),'y':(position['y']-1)};\n    return possibleMoveCoords;\n}\nreturn msg;","outputs":1,"noerr":0,"x":290,"y":580,"wires":[["1ff2ddc7.df48c2"]]},{"id":"ff653228.d051d8","type":"comment","z":"8500a1d7.c7f098","name":"Parallel Calcs","info":"","x":1010,"y":480,"wires":[]},{"id":"5375bc9a.1ebe6c","type":"change","z":"8500a1d7.c7f098","name":"Possible Moves","rules":[{"t":"move","p":"possibleMoves","pt":"msg","to":"paths.possibleMoves","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1020,"y":520,"wires":[["754144a.3c07c3c"]]}]