[{"id":"8500a1d7.c7f098","type":"tab","label":"Node-Red-Bellied-Black-Snake","disabled":false,"info":""},{"id":"afb9b9ec.08b25","type":"ui_tab","z":"","name":"Last Game Analysis","icon":"dashboard","disabled":false,"hidden":false},{"id":"5919e914.0af918","type":"ui_group","z":"","name":"Game Analysis","tab":"afb9b9ec.08b25","order":1,"disp":false,"width":"30","collapse":false},{"id":"284b8be3.b82434","type":"ui_base","theme":{"name":"theme-light","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"},"themeState":{"base-color":{"default":"#0094CE","value":"#0094CE","edited":false},"page-titlebar-backgroundColor":{"value":"#0094CE","edited":false},"page-backgroundColor":{"value":"#fafafa","edited":false},"page-sidebar-backgroundColor":{"value":"#ffffff","edited":false},"group-textColor":{"value":"#1bbfff","edited":false},"group-borderColor":{"value":"#ffffff","edited":false},"group-backgroundColor":{"value":"#ffffff","edited":false},"widget-textColor":{"value":"#111111","edited":false},"widget-backgroundColor":{"value":"#0094ce","edited":false},"widget-borderColor":{"value":"#ffffff","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}},"angularTheme":{"primary":"indigo","accents":"blue","warn":"red","background":"grey"}},"site":{"name":"Node-RED Dashboard","hideToolbar":"false","allowSwipe":"false","lockMenu":"false","allowTempTheme":"false","dateFormat":"DD/MM/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"408d31b3.b95db","type":"ui_spacer","name":"spacer","group":"5919e914.0af918","order":5,"width":"2","height":1},{"id":"7d533443.fd95a4","type":"ui_spacer","name":"spacer","group":"5919e914.0af918","order":3,"width":"2","height":1},{"id":"61fddbcf.a5dd34","type":"ui_spacer","name":"spacer","group":"5919e914.0af918","order":1,"width":"7","height":1},{"id":"98455c9c.d05818","type":"http in","z":"8500a1d7.c7f098","name":"start","url":"/v1/start","method":"post","upload":false,"swaggerDoc":"","x":110,"y":60,"wires":[["ee339d7a.0807b"]]},{"id":"3764bff3.0893f","type":"debug","z":"8500a1d7.c7f098","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"data","targetType":"msg","x":440,"y":100,"wires":[]},{"id":"ee339d7a.0807b","type":"function","z":"8500a1d7.c7f098","name":"Game Start","func":"// This function is called when a game your snake is in starts.\n// It's purely for informational purposes, you don't have to make any decisions here.\n// msg.data contains information about the game that's about to be played.\nmsg.data = msg.payload;\n\nmsg.payload = { \"message\": \"ok\" }\nreturn msg;","outputs":1,"noerr":0,"x":270,"y":60,"wires":[["bd0c2dc1.e184a","3764bff3.0893f","19a63fc9.0a134"]]},{"id":"bd0c2dc1.e184a","type":"http response","z":"8500a1d7.c7f098","name":"","statusCode":"","headers":{},"x":430,"y":60,"wires":[]},{"id":"94983db5.982858","type":"http in","z":"8500a1d7.c7f098","name":"move","url":"/v1/move","method":"post","upload":false,"swaggerDoc":"","x":110,"y":480,"wires":[["27e12870.785fc","5fcc66f1.95d8b8","47e32af5.284f2c"]]},{"id":"3b1cb528.37087a","type":"http response","z":"8500a1d7.c7f098","name":"","statusCode":"","headers":{},"x":1650,"y":480,"wires":[]},{"id":"f08cea1a.65a69","type":"http in","z":"8500a1d7.c7f098","name":"end","url":"/v1/end","method":"post","upload":false,"swaggerDoc":"","x":110,"y":200,"wires":[["24078d37.460922"]]},{"id":"1fba5fed.37b528","type":"debug","z":"8500a1d7.c7f098","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"data","targetType":"msg","x":440,"y":240,"wires":[]},{"id":"24078d37.460922","type":"function","z":"8500a1d7.c7f098","name":"Game End","func":"// This function is called when a game your snake was in ends.\n// It's purely for informational purposes, you don't have to make any decisions here.\nmsg.data = msg.payload;\n\nmsg.payload = { \"message\": \"ok\" }\n  \nreturn msg;","outputs":1,"noerr":0,"x":270,"y":200,"wires":[["4f1a4dc8.6d01dc","1fba5fed.37b528","85b89f1c.e5352"]]},{"id":"4f1a4dc8.6d01dc","type":"http response","z":"8500a1d7.c7f098","name":"","statusCode":"","headers":{},"x":430,"y":200,"wires":[]},{"id":"c5cb3b12.0a461","type":"http in","z":"8500a1d7.c7f098","name":"metadata","url":"/v1/","method":"get","upload":false,"swaggerDoc":"","x":120,"y":340,"wires":[["1dbff4bd.6eb533"]]},{"id":"9b606b57.45bb18","type":"debug","z":"8500a1d7.c7f098","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":490,"y":380,"wires":[]},{"id":"1dbff4bd.6eb533","type":"function","z":"8500a1d7.c7f098","name":"Snake Config","func":"//  This function is called by Battlesnake to get information about your snake, or to keep it awake.\n// TODO: Use this function to decide how your snake is going to look on the board.\n\n/*\napiversion:string - Battlesnake API Version implemented by this Battlesnake\nauthor:string - Optional username of the Battlesnakeâ€™s author\nhead:string - Optional custom head for this Battlesnake\ntail:string - Optional custom tail for this Battlesnake\ncolor:string - Optional custom color for this Battlesnake\n*/\n\nmsg.payload = {\n    'apiversion': '1',\n    //'color': '#f1f1f1',//stealth mode\n    'color': '#'+Math.floor(Math.random()*16777215).toString(16), //random colour\n    'head': \"evil\",\n    'tail': \"hook\"\n  }\n\nreturn msg;","outputs":1,"noerr":0,"x":300,"y":340,"wires":[["da2e55ec.ad5608","9b606b57.45bb18"]]},{"id":"da2e55ec.ad5608","type":"http response","z":"8500a1d7.c7f098","name":"","statusCode":"","headers":{},"x":470,"y":340,"wires":[]},{"id":"27e12870.785fc","type":"change","z":"8500a1d7.c7f098","name":"Game Information","rules":[{"t":"set","p":"data","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":290,"y":580,"wires":[["a6db2c3c.0df4e"]]},{"id":"754144a.3c07c3c","type":"wait-paths","z":"8500a1d7.c7f098","name":"","paths":"[\"timeout\",\"data\",\"possibleMoves\",\"threats\",\"boxes\"]","timeout":"480","finalTimeout":"480","x":1250,"y":480,"wires":[["4d7c13f9.4e465c","98fdc9fe.f3277"]]},{"id":"75da136e.6d499c","type":"function","z":"8500a1d7.c7f098","name":"Avoid Necks","func":"for (let boi in msg.data.board.snakes) {\n    let snakeName = msg.data.board.snakes[boi]['name'];\n    if (snakeName == msg.mySnakeName) {\n        for (let direction in msg.possibleMoves) {\n            //if ((msg.possibleMoves[direction]['x'] == msg.neck['x']) && (msg.possibleMoves[direction]['y'] == msg.neck['y'])) {\n            if (msg.sameCoord(msg.possibleMoves[direction],msg.neck)) {\n                delete msg.possibleMoves[direction];\n                break;\n            }\n        }\n    } else {\n        let snakeNeck = msg.data.board.snakes[boi]['body'][1];\n        for (let direction in msg.enemyLookAhead[snakeName]) {\n            //if ((msg.enemyLookAhead[snakeName][direction]['x'] == snakeNeck['x']) && (msg.enemyLookAhead[snakeName]['y'] == snakeNeck['y'])) {\n            if (msg.sameCoord(msg.enemyLookAhead[snakeName][direction],snakeNeck)) {\n                delete msg.enemyLookAhead[snakeName][direction];\n                break;\n            }\n        }\n    }\n}\nreturn msg;","outputs":1,"noerr":0,"x":790,"y":580,"wires":[["115f5bb7.999bfc"]]},{"id":"5fcc66f1.95d8b8","type":"change","z":"8500a1d7.c7f098","name":"Start Timeout","rules":[{"t":"set","p":"paths","pt":"msg","to":"{\"timeout\": true}","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":270,"y":480,"wires":[["754144a.3c07c3c"]]},{"id":"4d7c13f9.4e465c","type":"function","z":"8500a1d7.c7f098","name":"Move Decision","func":"\n//avoid threatenedSquares\nif (msg.paths.threats) {\n    for (let direction in msg.paths.threats) {\n        delete msg.paths.possibleMoves[msg.paths.threats[direction]];\n    }\n}\n\nlet prePossibleMoves = JSON.parse(JSON.stringify(msg.paths.possibleMoves))\n//avoid running into boxes\nif (msg.paths.boxes) {\n    for (let direction in msg.paths.boxes) {\n        delete msg.paths.possibleMoves[direction];\n    }\n    if (Object.keys(msg.paths.possibleMoves).length == 0) { //all options are boxes\n        let largestBoxDirection = '';\n        let largestBoxSize = 0;\n        let tailBoxDirections = {};\n        let boxSizes = [];\n        let boxesAllSameSize = true;\n        for (let direction in msg.paths.boxes) {\n            if (msg.paths.boxes[direction]['containsTail']) {\n                largestBoxDirection = direction;\n                break;\n            }\n            //boxSizes.push(msg.paths.boxes[direction]['boxSize']);\n            /*if (boxSizes.length > 1) {\n                if (boxSizes[boxSizes.length-2] != boxSizes[boxSizes.length-1]) {\n                    boxesAllSameSize = false;\n                }\n            }*/\n            if (msg.paths.boxes[direction]['boxSize'] > largestBoxSize) { //largest box size so far\n                largestBoxDirection = direction;\n                largestBoxSize = msg.paths.boxes[direction]['boxSize'];\n            }\n        }\n        msg.paths.possibleMoves[largestBoxDirection] = prePossibleMoves[largestBoxDirection];   //at least head towards the biggest box\n    }\n}\n\n// Choose a random direction to move in\nlet choice = Math.floor(Math.random() * Object.keys(msg.paths.possibleMoves).length);\nlet snakeMove = Object.keys(msg.paths.possibleMoves)[choice];\n\nmsg.payload = { \"move\": snakeMove }\nreturn msg;","outputs":1,"noerr":0,"x":1460,"y":480,"wires":[["de9dc649.b44d7","3b1cb528.37087a","5620f2ce.d73ef4","a06d772e.2de2d8"]]},{"id":"bc65d059.53bee8","type":"catch","z":"8500a1d7.c7f098","name":"Catch Timeout","scope":["754144a.3c07c3c"],"uncaught":false,"x":1260,"y":520,"wires":[["4d7c13f9.4e465c","ece5b36d.afb59"]]},{"id":"1ff2ddc7.df48c2","type":"function","z":"8500a1d7.c7f098","name":"Snake Attributes","func":"msg.head = msg.data.you.head;\nmsg.neck = msg.data.you.body[1];\nmsg.tail = msg.data.you.body[msg.data.you.body.length-1];\n\nmsg.possibleMoves = msg.createMoveCoords(msg.head);\n\nmsg.mySnakeLength = msg.data.you.body.length;\nmsg.mySnakeName = msg.data.you.name;\n\nmsg.snakeEaten = {};\nmsg.snakeEaten[msg.mySnakeName] = (msg.data.you.health === 100);    //true or false\n\nreturn msg;","outputs":1,"noerr":0,"x":540,"y":580,"wires":[["21103100.8fc9a"]]},{"id":"de9dc649.b44d7","type":"debug","z":"8500a1d7.c7f098","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":1670,"y":520,"wires":[]},{"id":"115f5bb7.999bfc","type":"function","z":"8500a1d7.c7f098","name":"Avoid Walls","func":"\nfor (let boi in msg.data.board.snakes) {\n    let snakeName = msg.data.board.snakes[boi]['name'];\n    if (snakeName == msg.mySnakeName) {\n        for (let direction in msg.possibleMoves) {\n            if ((msg.possibleMoves[direction]['x'] < 0)\n            || (msg.possibleMoves[direction]['y'] < 0)\n            || (msg.possibleMoves[direction]['x'] > (msg.data.board.width-1))\n            || (msg.possibleMoves[direction]['y'] > (msg.data.board.height-1))) {\n                delete msg.possibleMoves[direction];\n                break;\n            }\n        }\n    } else {\n        for (let direction in msg.enemyLookAhead[snakeName]) {\n            if ((msg.enemyLookAhead[snakeName][direction]['x'] < 0)\n            || (msg.enemyLookAhead[snakeName][direction]['y'] < 0)\n            || (msg.enemyLookAhead[snakeName][direction]['x'] > (msg.data.board.width-1))\n            || (msg.enemyLookAhead[snakeName][direction]['y'] > (msg.data.board.height-1))) {\n                delete msg.enemyLookAhead[snakeName][direction];\n                break;\n            }\n        }\n    }\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":790,"y":640,"wires":[["79ae85c2.0327c4"]]},{"id":"79ae85c2.0327c4","type":"function","z":"8500a1d7.c7f098","name":"Avoid Bodies","func":"\nfor (let boi in msg.data.board.snakes) {\n    let snakeName = msg.data.board.snakes[boi]['name'];\n    if (snakeName == msg.mySnakeName) {\n        for (let boi2 in msg.data.board.snakes) {\n            for (let direction in msg.possibleMoves) {  //direction is 'left' or 'right' or 'down' or 'up'\n                for (let i in msg.data.board.snakes[boi2]['body']) {\n                    //if ((msg.possibleMoves[direction]['x'] == msg.data.board.snakes[boi2]['body'][i]['x'])\n                    //&& (msg.possibleMoves[direction]['y'] == msg.data.board.snakes[boi2]['body'][i]['y'])) {\n                    if (msg.sameCoord(msg.possibleMoves[direction],msg.data.board.snakes[boi2]['body'][i])) {\n                        delete msg.possibleMoves[direction];\n                        break;\n                    }\n                }\n            }\n        }\n    } else {\n        for (let boi2 in msg.data.board.snakes) {\n            for (let direction in msg.enemyLookAhead[snakeName]) {  //direction is 'left' or 'right' or 'down' or 'up'\n                for (let i in msg.data.board.snakes[boi2]['body']) {\n                    //if ((msg.enemyLookAhead[snakeName][direction]['x'] == msg.data.board.snakes[boi2]['body'][i]['x'])\n                    //&& (msg.enemyLookAhead[snakeName][direction]['y'] == msg.data.board.snakes[boi2]['body'][i]['y'])) {\n                    if (msg.sameCoord(msg.enemyLookAhead[snakeName][direction],msg.data.board.snakes[boi2]['body'][i])) {\n                        delete msg.enemyLookAhead[snakeName][direction];\n                        break;\n                    }\n                }\n            }\n        }\n    }\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":790,"y":700,"wires":[["ef83db3b.715e4","5375bc9a.1ebe6c","f235d4d3.c2ac3","cd2760d5.e03da"]]},{"id":"5620f2ce.d73ef4","type":"debug","z":"8500a1d7.c7f098","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1650,"y":560,"wires":[]},{"id":"ece5b36d.afb59","type":"debug","z":"8500a1d7.c7f098","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"error","targetType":"msg","x":1440,"y":560,"wires":[]},{"id":"ef83db3b.715e4","type":"function","z":"8500a1d7.c7f098","name":"Avoid Threats","func":"\n//msg.paths[\"threats\"] = []\nmsg.paths = {\"threats\": []};\nfor (let direction in msg.possibleMoves) {  //direction is 'left' or 'right' or 'down' or 'up'\n    for (let boi in msg.data.board.snakes) {\n        let snakeName = msg.data.board.snakes[boi]['name'];\n        if ((msg.mySnakeName != snakeName) && (msg.enemyLengths[snakeName] >= msg.mySnakeLength)) {\n            for (let enemyDirection in msg.enemyLookAhead[snakeName]) {\n                if (msg.sameCoord(msg.possibleMoves[direction],msg.enemyLookAhead[snakeName][enemyDirection])) {\n                    msg.paths[\"threats\"].push(direction);\n                }\n            }\n        }\n    }\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":1020,"y":700,"wires":[["754144a.3c07c3c"]]},{"id":"75c2b5ce.dc3364","type":"function","z":"8500a1d7.c7f098","name":"Avoid Neck","func":"//msg.paths[\"variable_name\"] = value\nmsg.paths = {\"neck\": false};\nfor (let direction in msg.possibleMoves) {  //direction is 'left' or 'right' or 'down' or 'up'\n    if ((msg.possibleMoves[direction]['x'] == msg.neck['x']) && (msg.possibleMoves[direction]['y'] == msg.neck['y'])) {\n        msg.paths['neck'] = direction;\n        break;\n    }\n}\nreturn msg;","outputs":1,"noerr":0,"x":970,"y":400,"wires":[[]]},{"id":"21103100.8fc9a","type":"function","z":"8500a1d7.c7f098","name":"Enemy Attributes","func":"msg.enemyLengths = {};\nmsg.enemyLookAhead = {};\n\nfor (let boi in msg.data.board.snakes) {\n    let snakeName = msg.data.board.snakes[boi]['name'];\n    let snakeHead = msg.data.board.snakes[boi]['body'][0];\n    if (snakeName != msg.mySnakeName) {\n        msg.enemyLengths[snakeName] = msg.data.board.snakes[boi]['body'].length;\n        \n        msg.enemyLookAhead[snakeName] = msg.createMoveCoords(snakeHead);\n        msg.snakeEaten[snakeName] = (msg.data.board.snakes[boi]['health'] === 100); //true or false\n    }\n}\nreturn msg;","outputs":1,"noerr":0,"x":550,"y":640,"wires":[["dff20af4.e6b838"]]},{"id":"70e872d8.188f64","type":"comment","z":"8500a1d7.c7f098","name":"Game States","info":"","x":530,"y":540,"wires":[]},{"id":"64131f69.c169a","type":"comment","z":"8500a1d7.c7f098","name":"Instant Deaths","info":"","x":790,"y":540,"wires":[]},{"id":"a6db2c3c.0df4e","type":"function","z":"8500a1d7.c7f098","name":"Helper Functions","func":"msg.sameCoord = function(coord1,coord2) {\n    return ((coord1['x'] == coord2['x']) && (coord1['y'] == coord2['y']))\n}\nmsg.createMoveCoords = function(position) {\n    let possibleMoveCoords = {};\n    possibleMoveCoords['left']={'x':(position['x']-1),'y':position['y']};\n    possibleMoveCoords['right']={'x':(position['x']+1),'y':position['y']};\n    possibleMoveCoords['up']={'x':(position['x']),'y':(position['y']+1)};\n    possibleMoveCoords['down']={'x':(position['x']),'y':(position['y']-1)};\n    return possibleMoveCoords;\n}\nmsg.offsetCoord = function(position) {\n    return { 'x': position['x']+1, 'y': position['y']+1 };\n}\nmsg.unoffsetCoord = function(position) {\n    return { 'x': position['x']-1, 'y': position['y']-1 };\n}\nreturn msg;","outputs":1,"noerr":0,"x":290,"y":640,"wires":[["1ff2ddc7.df48c2"]]},{"id":"ff653228.d051d8","type":"comment","z":"8500a1d7.c7f098","name":"Parallel Calcs","info":"","x":1010,"y":540,"wires":[]},{"id":"5375bc9a.1ebe6c","type":"change","z":"8500a1d7.c7f098","name":"Possible Moves","rules":[{"t":"move","p":"possibleMoves","pt":"msg","to":"paths.possibleMoves","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1020,"y":640,"wires":[["754144a.3c07c3c"]]},{"id":"dff20af4.e6b838","type":"function","z":"8500a1d7.c7f098","name":"Game Attributes","func":"msg.grid = [];\nfor (let x=0;x<=(msg.data.board.width+1);x++) {\n  let column = []\n  for (let y=0;y<=(msg.data.board.height+1);y++) {\n    if (x == 0 || x == msg.data.board.width+1) { //if either boundary\n        column[y] = 255;\n    } else if (y == 0 || y == msg.data.board.height+1) {\n        column[y] = 255;\n    } else {\n        column[y] = false;\n    }\n  }\n  msg.grid[x] = column;\n}\nfor (let boi in msg.data.board.snakes) {\n    let revBody = (Object.assign([],msg.data.board.snakes[boi]['body'])).reverse();\n    let incrementer = 1;//((msg.snakeEaten[msg.data.snakes[boi]['name']]) ? 2 : 1 )\n    for (let i in revBody) {\n        msg.grid[revBody[i]['x']+1][revBody[i]['y']+1] = incrementer;\n        incrementer++;\n    }\n}\nreturn msg;","outputs":1,"noerr":0,"x":540,"y":700,"wires":[["75da136e.6d499c"]]},{"id":"f235d4d3.c2ac3","type":"function","z":"8500a1d7.c7f098","name":"Detect Boxes","func":"//msg.paths[\"variable_name\"] = value\nmsg.paths = { \"boxes\": {} };\n\nfunction floodFill(coord,grid) {\n    if (!(grid[coord['x']][coord['y']])) {  //if open space\n        grid[coord['x']][coord['y']] = true;\n        let newCheckCoords = msg.createMoveCoords(coord);\n        for (let direction in newCheckCoords) {\n            grid = floodFill(newCheckCoords[direction],grid);\n        }\n    }\n    return grid;\n}\n\nfunction gridComparison(grid1,grid2) {\n    let differences = []\n    for (let x in grid1) {\n        for (let y in grid1[x]) {\n            if (grid1[x][y] != grid2[x][y]) {\n                differences.push({'x':parseInt(x),'y':parseInt(y)});\n            }\n        }\n    }\n    return differences;\n}\n\nfunction getBoundaries(grid,zoneArray) {\n    let boundaryArray = [];\n    for (let i in zoneArray) {\n        let checkCoords = msg.createMoveCoords(zoneArray[i]);\n        for (let direction in checkCoords) {\n            if (grid[checkCoords[direction]['x']][checkCoords[direction]['y']]) { //found wall\n                boundaryArray.push(checkCoords[direction]);\n            }\n        }\n    }\n    return boundaryArray;\n}\n\nfunction tailInBoxWall(boundaryArray,tail) {\n    for (let coord in boundaryArray) {\n        if (msg.sameCoord(boundaryArray[coord],tail)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nfor (let direction in msg.possibleMoves) {  //direction is 'left' or 'right' or 'down' or 'up'\n    let offsetDir = msg.offsetCoord(msg.possibleMoves[direction]);\n    let filledGrid = floodFill(offsetDir,JSON.parse(JSON.stringify(msg.grid)));\n    let zoneArray = gridComparison(msg.grid,filledGrid);\n    if (zoneArray.length < msg.mySnakeLength) {\n        let boundaryArray = getBoundaries(msg.grid,zoneArray);\n        msg.paths['boxes'][direction] = {\"boxSize\": zoneArray.length, \"containsTail\": tailInBoxWall(boundaryArray,msg.offsetCoord(msg.tail)) };\n    }\n\n}\nreturn msg;","outputs":1,"noerr":0,"x":1010,"y":760,"wires":[["754144a.3c07c3c"]]},{"id":"98fdc9fe.f3277","type":"debug","z":"8500a1d7.c7f098","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"paths","targetType":"msg","x":1450,"y":440,"wires":[]},{"id":"47e32af5.284f2c","type":"debug","z":"8500a1d7.c7f098","name":"Print Turn","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload.turn","targetType":"msg","x":260,"y":440,"wires":[]},{"id":"55fb3530.0a0af4","type":"ui_template","z":"8500a1d7.c7f098","group":"5919e914.0af918","name":"Game Board","order":7,"width":24,"height":14,"format":"<iframe allow=\"fullscreen *\" id=\"embedGame\" scrolling=\"no\" frameBorder=\"0\" style=\"width:100%; height:100%; background-color:white\"> </iframe>\n<!--<iframe allow=\"fullscreen *\" test=`${gameID}` scrolling=\"no\" src=\"https://board.battlesnake.com/?engine=https%3A//engine.battlesnake.com&amp;game=5d34d568-1c5c-46b2-b804-9bef99a208e5\" style=\"width:100%; height:100%; background-color:white\"> </iframe>-->\n\n<script>\n(function(scope) {\n    scope.$watch('msg', function(msg) {\n        console.log(msg.payload);\n        let url =`https://board.battlesnake.com/?engine=https://engine.battlesnake.com&game=${msg.payload}`\n        document.getElementById(\"embedGame\")['src'] = url;\n    });\n})(scope);    \n</script>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","x":930,"y":1000,"wires":[[]]},{"id":"19a63fc9.0a134","type":"change","z":"8500a1d7.c7f098","name":"flow.currentGame","rules":[{"t":"set","p":"currentGame","pt":"flow","to":"{}","tot":"json"},{"t":"set","p":"currentGame.gameID","pt":"flow","to":"data.game.id","tot":"msg"},{"t":"set","p":"currentGame.start","pt":"flow","to":"data","tot":"msg"},{"t":"set","p":"currentGame.turn","pt":"flow","to":"[]","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":470,"y":140,"wires":[[]]},{"id":"85b89f1c.e5352","type":"change","z":"8500a1d7.c7f098","name":"set flow.lastGame","rules":[{"t":"move","p":"currentGame","pt":"flow","to":"lastGame","tot":"flow"},{"t":"set","p":"lastGame.end","pt":"flow","to":"data","tot":"msg"},{"t":"set","p":"payload","pt":"msg","to":"Click for New Game!","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":470,"y":280,"wires":[["1ad84c6e.78ae3c"]]},{"id":"99952d90.f1d068","type":"function","z":"8500a1d7.c7f098","name":"on Dashboard Load","func":"var socketIDs = flow.get('socketIDs')||[];\n\nvar reload = true;\nvar i;\nfor (i = 0; i < socketIDs.length; i++) \n{ \n  if (socketIDs[i]['socketid'] === msg.socketid)\n  {\n    reload = false;\n  }\n}\nif (reload === true)\n{\n    var dict = {\"socketid\":msg.socketid,\"time\":Date.now()};\n    socketIDs.push(dict);\n    console.warn(socketIDs);\n    flow.set('socketIDs',socketIDs);\n    msg.payload = msg._starttime;\n    return msg;\n}","outputs":1,"noerr":0,"x":290,"y":980,"wires":[["2d4f9a3a.7d6f2e","16e248e3.0dcd77"]]},{"id":"185202dc.83d4fd","type":"function","z":"8500a1d7.c7f098","name":"socketCleanser","func":"var socketIDs = flow.get('socketIDs')||[];\n\nvar i;\nfor (i = 0; i < socketIDs.length; i++) \n{ \n  if ((socketIDs[i]['time'] + 86400000) > Date.now())\n  {\n    socketIDs.splice(i,1)\n  }\n  //socketIDs.splice(i,1)\n}\nflow.set('socketIDs',socketIDs);","outputs":0,"noerr":0,"x":280,"y":1020,"wires":[]},{"id":"449d3a91.68533c","type":"inject","z":"8500a1d7.c7f098","name":"","topic":"","payload":"","payloadType":"date","repeat":"3600","crontab":"","once":false,"x":110,"y":1020,"wires":[["185202dc.83d4fd"]]},{"id":"b6760c14.39517","type":"ui_ui_control","z":"8500a1d7.c7f098","name":"","events":"connect","x":100,"y":980,"wires":[["99952d90.f1d068"]]},{"id":"2d4f9a3a.7d6f2e","type":"change","z":"8500a1d7.c7f098","name":"Update Dashboard","rules":[{"t":"set","p":"payload","pt":"msg","to":"lastGame.gameID","tot":"flow"},{"t":"set","p":"currentDash","pt":"flow","to":"lastGame.gameID","tot":"flow"}],"action":"","property":"","from":"","to":"","reg":false,"x":730,"y":980,"wires":[["a5761aa0.646168","55fb3530.0a0af4","3402d09c.300c28"]]},{"id":"a06d772e.2de2d8","type":"function","z":"8500a1d7.c7f098","name":"Store Decision info","func":"flow.get('currentGame', function(err, currentGame) {\n    if (err) {\n        node.error(err, msg);\n    } else {\n        if (msg.paths.data.game.id == currentGame.gameID) { //if most recent game\n            //strip non decision info\n            delete msg.paths.timeout;\n            delete msg.paths.data;\n            currentGame.turn.push({\"paths\":msg.paths, \"move\":msg.payload.move});\n            flow.set('currentGame',currentGame, function(err) {\n                if (err) {\n                    node.error(err, msg);\n                }\n            });\n        }\n    }\n});\n","outputs":0,"noerr":0,"x":1690,"y":440,"wires":[]},{"id":"86ff1963.069318","type":"ui_button","z":"8500a1d7.c7f098","name":"","group":"5919e914.0af918","order":4,"width":"6","height":"1","passthru":false,"label":"{{msg.payload}}","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"","x":330,"y":940,"wires":[["16e248e3.0dcd77","f8c38261.fd5a78"]]},{"id":"a5761aa0.646168","type":"ui_text","z":"8500a1d7.c7f098","group":"5919e914.0af918","order":2,"width":"13","height":1,"name":"","label":"","format":"Game ID: <a href=\"https://play.battlesnake.com/g/{{msg.payload}}/\" target=\"_blank\">{{msg.payload}}</a> ","layout":"row-left","x":910,"y":960,"wires":[]},{"id":"1ad84c6e.78ae3c","type":"link out","z":"8500a1d7.c7f098","name":"button msg","links":["e2e7a2f.0d2156"],"x":615,"y":280,"wires":[]},{"id":"e2e7a2f.0d2156","type":"link in","z":"8500a1d7.c7f098","name":"","links":["1ad84c6e.78ae3c"],"x":215,"y":940,"wires":[["86ff1963.069318"]]},{"id":"16e248e3.0dcd77","type":"change","z":"8500a1d7.c7f098","name":"update button text","rules":[{"t":"set","p":"payload","pt":"msg","to":"Most Recent Game Displayed","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":530,"y":880,"wires":[["86ff1963.069318"]]},{"id":"f8c38261.fd5a78","type":"switch","z":"8500a1d7.c7f098","name":"if new gameID","property":"lastGame.gameID","propertyType":"flow","rules":[{"t":"neq","v":"currentDash","vt":"flow"}],"checkall":"true","repair":false,"outputs":1,"x":520,"y":940,"wires":[["2d4f9a3a.7d6f2e"]]},{"id":"cd2760d5.e03da","type":"change","z":"8500a1d7.c7f098","name":"Game Data","rules":[{"t":"move","p":"data","pt":"msg","to":"paths.data","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1010,"y":580,"wires":[["754144a.3c07c3c"]]},{"id":"c8ff8f05.13e9d8","type":"ui_template","z":"8500a1d7.c7f098","group":"5919e914.0af918","name":"Turn Info","order":6,"width":"6","height":"14","format":"<div>\n    <p>Test</p>\n    <p id=\"turnInfo\">\n        \n    </p>\n</div>\n\n<script>\nwindow.addEventListener(\"message\", receiveMessage, false);\n\n\nvar globalTurns = [];//{{msg.payload}};\n//console.log('globalTurns',globalTurns);\n\n(function(scope) {\n    console.log('Position 1');\n    console.dir(scope);\n    scope.$watch('msg.payload', function(data) {\n        console.log('Position 2');\n        globalTurns = data;\n        console.dir(data);\n    });\n})(scope);\n\n\nfunction receiveMessage(event) {\n    console.log('Recieved message',event.data.frame.turn)\n    let turnNumber = event.data.frame.turn;\n    if (turnNumber < globalTurns.length) {\n        document.getElementById(\"turnInfo\").innerHTML = JSON.stringify(globalTurns[turnNumber],null,2);\n    } else {\n        //dead\n    }\n}\n</script>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","x":1060,"y":1040,"wires":[[]]},{"id":"3402d09c.300c28","type":"change","z":"8500a1d7.c7f098","name":"Turn Info","rules":[{"t":"set","p":"payload","pt":"msg","to":"lastGame.turn","tot":"flow"}],"action":"","property":"","from":"","to":"","reg":false,"x":920,"y":1040,"wires":[["c8ff8f05.13e9d8"]]}]